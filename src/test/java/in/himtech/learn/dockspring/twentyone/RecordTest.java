package in.himtech.learn.dockspring.twentyone;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import java.time.LocalDate;

public class RecordTest {

    // Records are immutable data classes that require only the type and name of fields.
    // The equals, hashCode, and toString methods, as well as the private, final fields and public constructor, are generated by the Java compiler.
    // The getter method of record is same as the name of field. (Line # 19, 20 : emp.name(), emp.emp.empNo())
    record Employee(Integer empNo, String name, LocalDate doj){};

    @Test
    public void testRecord(){
        var emp = new Employee(111, "Himanshu", LocalDate.now());

        Assertions.assertEquals(emp.name(), "Himanshu");
        Assertions.assertEquals(emp.empNo(), 111);
        System.out.println(emp.toString());
    }

    // Static variable and methods could be included in records
    record Person(Integer ssn, String name, String address){
        public static String UNKNOWN_ADDRESS = "Unknown";

        public static Person annoymous(){
            return new Person(0, "Annoymous", UNKNOWN_ADDRESS);
        }
    }

    @Test
    void testRecordStatic(){
        Assertions.assertEquals(Person.UNKNOWN_ADDRESS, "Unknown");
        Assertions.assertEquals(Person.annoymous().ssn(), 0);
    }
}
